{"version":3,"sources":["Header/Header.js","AddaTask/AddaTask.js","Footer/Footer.js","CurrentTasks/CurrentTasks.js","Tasks/Tasks.js","Notes/Notes.js","App.js","index.js"],"names":["Header","className","AddaTask","props","useState","taskText","setTaskText","date","setDate","onClick","console","log","addNewTaskFunc","type","value","onChange","event","target","Footer","CurrentTasks","count","Tasks","text","Status","moment","Deadline","format","id","completeTaskFun","deleteTaskFunc","Notes","noteText","setNoteText","App","selected","tasks","setTasks","dir","deleteTask","filteredTasks","filter","task","completeTask","newTask","map","notes","setNotes","Math","random","newTasks","length","key","addNewNotesFun","newNote","newNotes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12f27e3e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\"\n\nfunction Header() {\n    return (\n        <div className=\"card\">\n        <div className=\"p-3 mb-2 bg-info text-white\">\n            <header>\n                <h1>Get Things DONE!</h1>\n            </header>\n        </div>\n       </div> \n    )\n}\n\nexport default Header;","import React, { useState } from 'react'\nimport \"./AddaTask.css\"\n\n\nfunction AddaTask(props) {\n    const [taskText, setTaskText] = useState(\" \");\n    const [date, setDate] = useState(\"2020-04-10\");\n\n    const handleTextChange = (event) => {\n        setTaskText(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n        setDate(event.target.value);\n    }\n\n    const handleAddTask = () => {\n        console.log(\"clicked\")\n        props.addNewTaskFunc(taskText, date);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div ><h3 className=\"text-left\"> Add a Task   <button className=\"btn btn-info\" onClick={handleAddTask}>Add</button> </h3> </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col-6 md-6\"> <input type=\"test\" className=\"form-control\" value={taskText} onChange={handleTextChange} /></div>\n                        <div className=\"col-6 col-md-6\"> <input type=\"date\" className=\"form-control\" value={date} onChange={handleDateChange} /></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddaTask; ","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <div className=\"container\">\n            <blockquote className=\"blockquote mb-0\">\n                <p className=\"footer\">\"It always seems impossible until it is DONE!</p>\n                <footer className=\"blockquote-footer\"> Nelson Mandel</footer>\n            </blockquote>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport \"./CurrentTasks.css\"\n\n\nfunction CurrentTasks(props) {\n\n    // const option = [\n    //     '20%', '40%', '60%', '80%',\n    // ];\n\n    // const defaultOption = option[0];\n\n\n\n    return (\n        <header>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h3> Current To DO </h3>\n                    <div><h5 className=\"text-left\">{props.count} outstanding tasks</h5></div>\n\n                    <div className=\"row\">\n                        <div className=\"col-3\" > <p className=\"text-centre\">Task </p> </div>\n                        <div className=\"col-3\">\n\n                            <p className=\"text-centre\">  Status  <select>\n                                <option value=\"Not started\"> 0 %</option>\n                                <option value=\"20 percent\"> 20 %</option>\n                                <option value=\"40 percent\"> 40 %</option>\n                                <option value=\"60 percent\"> 60 %</option>\n                                <option value=\"80 percent\"> 80 %</option>\n                                <option value=\"completed\"> 100 %</option>\n                            </select>\n\n                                {/* <Dropdown options={options} onChange={this._onSelect} value={defaultOption} placeholder=\"Select an option\" />; Status  */}\n\n                            </p> \n                            </div>\n\n                        <div className=\"col-3\"> <p className=\"text-left\"> Deadline</p> </div>\n                    </div>\n                </div>\n\n            </div>\n        </header >\n\n    )\n}\n\nexport default CurrentTasks; \n","import React from 'react'\nimport \"./Tasks.css\"\nimport moment from 'moment';\n\nfunction Tasks(props) {\n\n    const handleDeleteClick = () => {\n        // console.log(\"Delete button was clicked\");\n        // console.log(props.id);\n        props.deleteTaskFunc(props.id);\n    };\n\n    const handleCompelteClick = () => {\n        console.log(\"Complete button was clicked\");\n        console.log(props.id);\n        props.completeTaskFun(props.id);\n    }\n\n    const handleStatusChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    const changeStatus = (event) => {   \n        console.log(event.target.value) \n    }\n\n    // const faveFood = 'pizza'\n    // const dougsExample = `my fave food is ${faveFood}` // 'my fave food is pizza\n    // if props.Status === 100 -> className 'taskComplate' (which has a green background)\n    // if not, be normal\n\n    // props.Status === 100\n    // if true 'cardBodyTaskComplete'\n    // if false 'card-body'\n//   props.Status === 100 ? 'cardBodyTaskComplete' : 'card-body'\n\n    return (\n        <div className=\"card\">\n            <div className= \"card-body\">\n             {/* {`${props.Status === 100 ? 'cardBodyTaskComplete' : 'card-body'}`} */}\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4\"> <input type=\"checkbox\" className=\"form-check-input\" onClick={changeStatus}/>{props.text}</div>\n                    <div className=\"col-3 col-md-2\" onChange={handleStatusChange}>{props.Status}</div>\n                    <div className=\"col-3 col-md-2\"> {moment(props.Deadline).format('d MM YYYY')} </div>\n                    <div className=\"col-3 col-md-2\"><button className=\"btn btn-info\" onClick={handleCompelteClick}>Complete </button></div>\n                    <div className=\"col-3 col-md-2\"><button className=\"btn btn-info\" onClick={handleDeleteClick}> Delete</button></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks;","import React, { useState } from 'react'\nimport \"./Notes.css\";\n\n   //create some initial state (includes useState)\n    // we need to keep track of the text section\n    //listen to any event that happen in the form state and update state accordingly \n\nfunction Notes(props) {\n \n    const [noteText, setNoteText] = useState(\" \")\n    \n    const handleTextChange = (event) => {\n        setNoteText(event.target.value)\n       \n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"col-12 col-md-8\">\n                <div className=\"card Notes\">\n                    <div className=\"card-body\">\n                        <h3 className=\"text-left\"> Notes  <button className=\"btn btn-info\" onClick> + </button>  </h3>\n                        <div>\n                            <div className=\"card-body\">\n                                <input type=\"text\" className=\"form-control\" value={noteText} onChange={handleTextChange} />\n                            </div>\n                            <div className=\"col-12 col-md-4\">{props.text}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notes; ","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header/Header.js';\nimport AddaTask from './AddaTask/AddaTask.js';\nimport Footer from './Footer/Footer.js';\nimport CurrentTasks from './CurrentTasks/CurrentTasks.js';\nimport Tasks from './Tasks/Tasks.js';\nimport Notes from './Notes/Notes.js';\n\n\n\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { text: \"Organise Bookcase\", Status: 20, Deadline: \"2020/04/01\", id: 1 , selected: false},\n    { text: \"Tidy room\", Status: 40, Deadline: \"2020/04/11\", id: 2, selected : false },\n    { text: \" Post mail\", Status: 60, Deadline: \"2020/04/20\", id: 3, selected : false },\n    { text: \"Hoover carpet\", Status: 100 ,  Deadline: \"2020/04/30\", id: 4, selected : false  },\n  ]);\n\nconsole.dir(setTasks);\n\n  const deleteTask = (id) => {\n    const filteredTasks = tasks.filter((task) => {\n      return task.id !== id;\n    })\n\n    setTasks(filteredTasks);\n  }\n\n  const completeTask = (id) => {\n    const newTask = tasks.map((task) => {\n      if (task.id === id) {\n        task.Status = 100;\n        console.log(task)\n      }\n      return task;\n    });\n    console.log(newTask);\n    setTasks(newTask)\n  }\n\n\n\n  const addNewTask = (text, date) => {\n    const newTask = {\n      text: text,\n      Deadline: date,\n      id: Math.random() * 1000,\n    }\n    const newTasks = [...tasks, newTask]\n    setTasks(newTasks)\n  }\n\n\n\n\n  //----------------------------------------------//\n  const [notes, setNotes] = useState([\n    { text: \"Add notes here \" },\n  ])\n\n\n  const addNewNotes = (text) => {\n    const newNote = {\n      text: text,\n    }\n    const newNotes = [...notes, newNote]\n    setNotes(newNotes)\n  }\n\n\n  // add a boolean - 'selected' property to your task object\n  // when checkbox is checked it turns true\n  \n  // when status dropdown is changed \n  //that would loop through array, check 'checked' status\n  // update status key of each that are true\n\n  const updateStatus = (id) => {\n\n\n    // const newStatus = {\n    //   text: \n    // }\n    // setTasks(newStatus)\n  }\n\nconst selectedCheckBox = (id) => {\n// eg id = 3\n// tasks = array\n//loop through array looking for specific id \n// if statement to check id\n//if false, move on, else change selected to true\n\n\n\n\n}\n\n\n\n  return (\n    <div className=\"App\">\n      <section>\n        <Header />\n        <Footer />\n      </section>\n      <main>\n        <section className=\"container\">\n          <div className=\"container\">\n            <AddaTask addNewTaskFunc={addNewTask} />\n            <div className=\"container\">\n              <CurrentTasks count={tasks.length} />\n              {tasks.map((task) => {\n                return < Tasks\n                  key={task.id}\n                  deleteTaskFunc={deleteTask}\n                  completeTaskFun={completeTask}\n                  text={task.text}\n                  Status={task.Status}\n                  Deadline={task.Deadline}\n                  id={task.id}\n                />\n              })}\n            </div>\n          </div>\n        </section>\n        <section className=\"container\">\n          {/* {notes.map((note) =>{\nreturn < Notes \ntext = {notes.text}/>\n          })} */}\n          <Notes\n            addNewNotesFun={addNewNotes}\n            text={notes.text} />\n        </section>\n      </main>\n    </div>\n  );\n}\n// addNotesFunc={addNotes}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}