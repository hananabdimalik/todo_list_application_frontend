{"version":3,"sources":["Header/Header.js","AddaTask/AddaTask.js","Footer/Footer.js","CurrentTasks/CurrentTasks.js","Tasks/Tasks.js","App.js","index.js"],"names":["Header","className","AddaTask","props","useState","taskText","setTaskText","date","setDate","onClick","console","log","addNewTaskFunc","type","value","onChange","event","target","Footer","CurrentTasks","tasks","filter","task","selected","count","statusUpdate","Tasks","id","toggleSelected","text","Status","moment","Deadline","format","completeTaskFun","deleteTaskFunc","App","setTasks","useEffect","axios","get","then","response","data","catch","err","deleteTask","delete","filteredTasks","TaskId","completeTask","selectedTask","find","put","Completed","newTask","map","toggleTask","post","Description","newTasks","length","updatedTask","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59bd7a54.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\"\n\nfunction Header() {\n    return (\n        <div className=\"card\">\n        <div className=\"p-3 mb-2 bg-info text-white\">\n            <header>\n                <h1>Get Things DONE!</h1>\n            </header>\n        </div>\n       </div> \n    )\n}\n\nexport default Header;","import React, { useState } from 'react'\nimport \"./AddaTask.css\"\n\n\nfunction AddaTask(props) {\n    const [taskText, setTaskText] = useState(\" \");\n    const [date, setDate] = useState(\"2020-04-10\");\n\n    const handleTextChange = (event) => {\n        setTaskText(event.target.value);\n    }\n\n    const handleDateChange = (event) => {\n        setDate(event.target.value);\n    }\n\n    const handleAddTask = () => {\n        console.log(\"clicked\")\n        props.addNewTaskFunc(taskText, date);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div ><h3 className=\"text-left\"> Add a Task   <button className=\"btn btn-info\" onClick={handleAddTask}>Add</button> </h3> </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col-6 md-6\"> <input type=\"test\" className=\"form-control\" value={taskText} onChange={handleTextChange} /></div>\n                        <div className=\"col-6 col-md-6\"> <input type=\"date\" className=\"form-control\" value={date} onChange={handleDateChange} /></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddaTask; ","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <div className=\"container\">\n            <blockquote className=\"blockquote mb-0\">\n                <p className=\"footer\">\"It always seems impossible until it is DONE!</p>\n                <footer className=\"blockquote-footer\"> Nelson Mandel</footer>\n            </blockquote>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport \"./CurrentTasks.css\"\n// import CurrentTasks from '../CurrentTasks/CurrentTasks';\n\n\nfunction CurrentTasks(props) {\n\n    //list of selected tasks \n    const selectedTask = props.tasks.filter((task) => {\n        return task.selected;\n        \n    });\n\n   \n    return (\n        <header>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h3> Current To DO </h3>\n                    <div><h5 className=\"text-left\">{props.count} outstanding tasks</h5></div>\n                    <div className=\"row\">\n                        <div className=\"col-3\" > <p className=\"text-centre\">Task </p> </div>\n                        <div className=\"col-3\">\n\n                            <p className=\"text-centre\">  Status  <select onChange={props.statusUpdate}>\n                                <option value=\"Not started\"> 0 </option>\n                                <option value=\"25\"> 25 %</option>\n                                <option value=\"50\"> 50 %</option>\n                                <option value=\"75\"> 75 %</option>\n                                <option value=\"completed\"> 100 %</option>\n                            </select>\n                            </p>\n                        </div>\n                        <div className=\"col-3\"> <p className=\"text-left\"> Deadline</p> </div>\n                    </div>\n                </div>\n            </div>\n        </header >\n\n    )\n}\n\nexport default CurrentTasks; \n","import React from 'react'\nimport \"./Tasks.css\"\nimport moment from 'moment';\n\nfunction Tasks(props) {\n\n    const handleDeleteClick = () => {\n        // console.log(\"Delete button was clicked\");\n        // console.log(props.id);\n        props.deleteTaskFunc(props.id);\n    };\n\n    const handleCompelteClick = () => {\n        console.log(\"Complete button was clicked\");\n        console.log(props.id);\n        props.completeTaskFun(props.id);\n    }\n\n    const handleStatusChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    const changeStatus = (event) => {   \n        console.log(event.target.value)   \n        props.toggleSelected(props.id);\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className= \"card-body\">\n             {/* {`${props.Status === 100 ? 'cardBodyTaskComplete' : 'card-body'}`} */}\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4\"> <input type=\"checkbox\" value={props.id} className=\"form-check-input\" onClick={changeStatus}/>{props.text}</div>\n                    <div className=\"col-3 col-md-2\" onChange={handleStatusChange}>{props.Status}</div>\n                    <div className=\"col-3 col-md-2\"> {moment(props.Deadline).format('d MM YYYY')} </div>\n                    <div className=\"col-3 col-md-2\"><button className=\"btn btn-info\" onClick={handleCompelteClick}>Complete </button></div>\n                    <div className=\"col-3 col-md-2\"><button className=\"btn btn-info\" onClick={handleDeleteClick}> Delete</button></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Header/Header.js';\nimport AddaTask from './AddaTask/AddaTask.js';\nimport Footer from './Footer/Footer.js';\nimport CurrentTasks from './CurrentTasks/CurrentTasks.js';\nimport Tasks from './Tasks/Tasks.js';\n\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  //only run this code once when the componenets first mounts\n  useEffect(() => {\n    //Fetch tasks from the Backend (GET)\n    axios.get(\"https://giovvfsmk9.execute-api.eu-west-1.amazonaws.com/dev/tasks\")\n      .then(response => {\n        console.log(\"Success\", response.data);\n        setTasks(response.data);\n      })\n      .catch(err => {\n        console.log(\"Error\", err)\n      });\n    //this array would normally contain the values that may change, and React would run the above code when the value changes\n    //this is called 'Array of dependencies  \n  }, []);\n\n  //Issue a Delete a task from the task from the tasks arrat (based on ID), and update the state with the new, short array\n  // any function that updates state should live where the state live\n  const deleteTask = (id) => {\n    //Issue a DELETE request to my API via postman\n    //if resolves, THEN I will filter my tasks on the frontend to remove the task with the given ID\n    //if rejects, I'm not ganna filer\n\n    axios.delete(`https://giovvfsmk9.execute-api.eu-west-1.amazonaws.com/dev/tasks/${id}`)\n      .then(response => {\n        const filteredTasks = tasks.filter((task) => {\n          return task.TaskId !== id;\n        });\n        setTasks(filteredTasks);\n      })\n      .catch(err => {\n        console.log(\"API Error\", err)\n      });\n  };\n\n  const completeTask = (id) => {\n\n    const selectedTask = tasks.find(task => {\n      return task.TaskId === id;\n    });\n\n    axios.put(`https://giovvfsmk9.execute-api.eu-west-1.amazonaws.com/dev/tasks/${id}`, {\n      Completed: true,\n      Status: selectedTask.Status\n    }\n    )\n      .then((response) => {\n        console.log(\"Updated status\", response)\n        //Create a new array of uptaded tasks, where the completed property of the matching task has been updated\n        const newTask = tasks.map((task) => {\n          if (task.TaskId === id) {\n            task.Status = 100;\n            task.Completed = true\n          }\n          return task;\n        });\n\n        setTasks(newTask)\n      })\n      .catch((err) => {\n        console.log(\"Error updating Task\", err)\n      });\n  }\n\n\n  const addNewTask = (text, date) => {\n    axios.post(\"https://giovvfsmk9.execute-api.eu-west-1.amazonaws.com/dev/tasks\", {\n      Description: text,\n      Deadline: date,\n      Status: 0\n    })\n      .then(response => {\n        const newTask = response.data;\n        //create a new array of tasks, which includes this new task\n        //Avoid mutating arrays or object(push, pop, splice, sort) \n        const newTasks = [...tasks, newTask]\n        console.log(newTasks)\n        setTasks(newTasks)\n      })\n      .catch(err => {\n        console.log(\"Error creating task\", err)\n      });\n  }\n\n  const toggleTask = (id) => {\n    const newTask = tasks.map((task) => {\n      if (task.TaskId === id) {\n        task.selected = !task.selected;\n        console.log(task)\n      }\n      return task;\n    });\n    setTasks(newTask)\n  }\n\n\n\n  const selectStatus = (event) => {\n    const updatedTask = tasks.map((task) => {\n      console.log(task)\n      if (task.selected) {\n        task.Status = event.target.value\n      }\n      return task;\n    })\n    setTasks(updatedTask)\n  }\n\n\n\n  const updateTaskStatus = (id) => {\n\n    axios.put(`https://giovvfsmk9.execute-api.eu-west-1.amazonaws.com/dev/tasks/${id}`, {\n      Status :100\n    })\n      .then((response) => {\n        console.log(\"updated\", response)\n        //Create a new array of uptaded tasks, where the completed property of the matching task has been updated\n        const newTask = tasks.map((task) => {\n          if (task.TaskId === id) {\n            task.selected = !task.selected\n          }\n          return task;\n        });\n\n        setTasks(newTask)\n      })\n      .catch((err) => {\n        console.log(\"Error updating Task\", err)\n      })\n  }\n\n\n\n  return (\n    <div className=\"container A\">\n      <div className=\"App\">\n        <section>\n          <Header />\n          <Footer />\n        </section>\n        <main>\n          <section className=\"container\">\n            <div className=\"container\">\n              <AddaTask addNewTaskFunc={addNewTask} />\n              <div className=\"container\">\n                <CurrentTasks count={tasks.length} tasks={tasks}\n                  statusUpdate={selectStatus}\n                />\n                {tasks.map((task) => {\n                  return < Tasks\n                    key={task.TaskId}\n                    deleteTaskFunc={deleteTask}\n                    completeTaskFun={completeTask}\n                    text={task.Description}\n                    Status={task.Status}\n                    toggleSelected={toggleTask}\n                    Deadline={task.Deadline}\n                    id={task.TaskId}\n                  />\n                })}\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    </div>\n  );\n}\n// addNotesFunc={addNotes}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}