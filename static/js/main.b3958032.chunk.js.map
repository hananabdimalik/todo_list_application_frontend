{"version":3,"sources":["Header/Header.js","AddaTask/AddaTask.js","Footer/Footer.js","CurrentTasks/CurrentTasks.js","Tasks/Tasks.js","Notes/Notes.js","App.js","index.js"],"names":["Header","AddaTask","className","type","Footer","CurrentTasks","props","count","Tasks","text","Status","moment","Deadline","format","onClick","console","log","id","completeTaskFun","deleteTaskFunc","Notes","App","useState","tasks","setTasks","deleteTask","filteredTasks","filter","task","completeTask","newTask","map","length","key","ReactDOM","render","document","getElementById"],"mappings":"6XAWeA,MARf,WACI,OACI,gCACR,kD,MCWeC,MAdf,WACI,OACG,yBAAKC,UAAU,IAAf,IAAmB,4BAAQA,UAAU,gBAAlB,OAAnB,IAAiE,2CACpE,yBAAKA,UAAU,YACnB,yBAAKA,UAAU,cAAf,IAA6B,2BAAOC,KAAM,OAAOD,UAAU,kBAC3D,yBAAKA,UAAW,kBAAhB,IAAkC,2BAAOC,KAAK,OAAOD,UAAU,qBCGhDE,MATf,WACI,OACI,gCAAYF,UAAU,mBAClB,4EACA,4BAAQA,UAAU,qBAAlB,oB,MCcGG,MAjBf,SAAsBC,GAClB,OACI,gCACA,+CACD,6BAAK,4BAAKA,EAAMC,MAAX,uBAEJ,yBAAKL,UAAU,OACZ,yBAAKA,UAAU,SAAf,IAAwB,qCAAxB,KACA,yBAAKA,UAAU,SAAf,IAAwB,uCAAxB,KACA,yBAAKA,UAAU,SAAf,IAAwB,wCAAxB,Q,wBCiBIM,MAzBf,SAAeF,GAcX,OACI,yBAAKJ,UAAU,eACX,yBAAKA,UAAW,mBAAmBI,EAAMG,MACzC,yBAAKP,UAAW,kBAAkBI,EAAMI,OAAxC,KACA,yBAAKR,UAAW,kBAAhB,IAAmCS,IAAOL,EAAMM,UAAUC,OAAO,aAAjE,KACA,yBAAKX,UAAW,kBAAiB,4BAAQA,UAAU,eAAeY,QAXnD,WACvBC,QAAQC,IAAI,+BACZD,QAAQC,IAAIV,EAAMW,IAClBX,EAAMY,gBAAgBZ,EAAMW,MAQa,cACjC,yBAAKf,UAAW,kBAAiB,4BAAQA,UAAU,eAAeY,QAlBrD,WAGzBR,EAAMa,eAAeb,EAAMW,MAekB,c,MCf9BG,MANf,WACI,OACJ,wCCkEeC,MA9Df,WAAgB,IAAD,EACaC,mBAAS,CACjC,CAAEb,KAAM,oBAAqBC,OAAQ,OAAQE,SAAU,aAAcK,GAAI,GACzE,CAAER,KAAM,YAAaC,OAAQ,OAAQE,SAAU,aAAcK,GAAI,GACjE,CAAER,KAAM,aAAcC,OAAQ,QAASE,SAAU,aAAcK,GAAI,GACnE,CAAER,KAAM,gBAAiBC,OAAQ,OAAQE,SAAU,aAAcK,GAAI,KAL1D,mBACNM,EADM,KACCC,EADD,KAkBPC,EAAa,SAACR,GAClB,IAAMS,EAAgBH,EAAMI,QAAO,SAACC,GACnC,OAAOA,EAAKX,KAAOA,KAGpBO,EAASE,IAGPG,EAAc,SAACZ,GACnB,IAAMa,EAAUP,EAAMQ,KAAI,SAACH,GAGzB,OAFGA,EAAKX,KAAOA,GAAMW,EAAKlB,OAEnBkB,KAEXJ,EAAUM,IAIR,OACE,yBAAK5B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcK,MAAOgB,EAAMS,SAC3B,yBAAK9B,UAAU,cACZqB,EAAMQ,KAAI,SAACH,GACV,OAAO,kBAAE,EAAF,CACLK,IAAKL,EAAKX,GACVE,eAAgBM,EAChBP,gBAAiBW,EACjBpB,KAAMmB,EAAKnB,KACXC,OAAQkB,EAAKlB,OACbE,SAAUgB,EAAKhB,SACfK,GAAIW,EAAKX,SAIf,kBAAC,EAAD,SC5DRiB,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.b3958032.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\"\n\nfunction Header() {\n    return (\n        <header>\n<h1>Get Things DONE!</h1>\n        </header>\n    ) \n}\n\nexport default Header;","import React from 'react'\nimport \"./AddaTask.css\"\n\nfunction AddaTask(){\n    return (\n       <div className=\"\"> <button className=\"btn btn-info\">Add</button> <h3> Add a Task</h3>\n    <div className=\"row mb-3\">\n<div className=\"col-4 md-4\"> <input type =\"test\" className=\"form-control\" /></div>\n<div className= \"col-4 col-md-4\"> <input type=\"date\" className=\"form-control\"/></div>\n{/* <div className=\"col-4 col-md-4\"> <input type=\"test\" className=\"form-control\" /></div> */}\n\n\n    </div>\n    </div>\n       )\n}\n\nexport default AddaTask; ","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <blockquote className=\"blockquote mb-0\">\n            <p>\"It always seems impossible until it is DONE!</p>\n            <footer className=\"blockquote-footer\"> Nelson Mandel</footer>\n        </blockquote>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport \"./CurrentTasks.css\"\n\nfunction CurrentTasks(props) {\n    return (\n        <header>\n        <h3> Current To DO </h3>\n       <div><h6>{props.count} outstanding tasks</h6></div>\n        \n        <div className=\"row\">\n           <div className=\"col-3\"> <p> Task </p> </div>\n           <div className=\"col-3\"> <p> Status </p> </div>\n           <div className=\"col-3\"> <p> Deadline</p> </div>             \n           </div> \n       \n         </header>\n       \n    )\n}\n\nexport default CurrentTasks; \n","import React from 'react'\nimport \"./Tasks.css\"\nimport moment from 'moment';\n\nfunction Tasks(props) {\n\nconst handleDeleteClick =() => {\n// console.log(\"Delete button was clicked\");\n// console.log(props.id);\nprops.deleteTaskFunc(props.id);\n};\n\nconst handleCompelteClick =() => {\n    console.log(\"Complete button was clicked\");\n    console.log(props.id);\n    props.completeTaskFun(props.id);\n}\n\n    return (\n        <div className=\"row taskRow\">\n            <div className= \"col-12 col-md-4\">{props.text}</div>\n            <div className= \"col-3 col-md-2\">{props.Status} </div>\n            <div className= \"col-3 col-md-2\"> {moment(props.Deadline).format('d MM YYYY')} </div>\n            <div className= \"col-3 col-md-2\"><button className=\"btn btn-info\" onClick={handleCompelteClick}>Complete </button></div>\n            <div className= \"col-3 col-md-2\"><button className=\"btn btn-info\" onClick={handleDeleteClick}> Delete</button></div>\n        </div>\n    )\n}\n\nexport default Tasks;","import React from 'react'\nimport \"./Notes.css\";\n\nfunction Notes () {\n    return (\n<h3> Notes </h3>\n    )\n}\n\nexport default Notes; ","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header/Header.js';\nimport AddaTask from './AddaTask/AddaTask.js'\nimport Footer from './Footer/Footer.js'\nimport CurrentTasks from './CurrentTasks/CurrentTasks.js';\nimport Tasks from './Tasks/Tasks.js'\nimport Notes from './Notes/Notes.js'\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { text: \"Organise Bookcase\", Status: \"20 %\", Deadline: \"2020/04/01\", id: 1 },\n    { text: \"Tidy room\", Status: \"40 %\", Deadline: \"2020/04/11\", id: 2 },\n    { text: \" Post mail\", Status: \"60 % \", Deadline: \"2020/04/20\", id: 3 },\n    { text: \"Hoover carpet\", Status: \"100%\", Deadline: \"2020/04/30\", id: 4 },\n  ]);\n// Click on the delete button\n//   the application needs to know this is happening (listen to the event)\n//   Know which button was clicked \n//   Remove the relevent todo object from our state \n\n\n//Click on the complete button\n  //our application need to know this is happening \n  // which button was clicked \n  //update the relevent task in the state\n\n  const deleteTask = (id) => {\n    const filteredTasks = tasks.filter((task) => {\n     return task.id !== id;\n    })\n\n    setTasks(filteredTasks); \n  } \n\nconst completeTask =(id) => {\n  const newTask = tasks.map((task) => {\n    if(task.id === id && task.Status === 100 ){\n }     \n    return task; \n  });\nsetTasks (newTask)\n}\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Footer />\n      <main>\n        <AddaTask />\n        <CurrentTasks count={tasks.length} />\n        <div className=\" container\">\n          {tasks.map((task) => {\n            return < Tasks\n              key={task.id}\n              deleteTaskFunc={deleteTask}\n              completeTaskFun={completeTask}\n              text={task.text}\n              Status={task.Status}\n              Deadline={task.Deadline}\n              id={task.id}\n            />\n          })}\n        </div>\n        <Notes />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}